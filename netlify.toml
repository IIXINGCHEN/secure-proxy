[build]
  # 构建配置 - 使用pnpm
  publish = "."
  command = "pnpm run build"
  functions = "netlify/functions"

[build.environment]
  # 环境变量
  NODE_VERSION = "18"
  PNPM_VERSION = "8"
  NETLIFY_USE_PNPM = "true"
  NETLIFY_DEPLOYMENT = "true"

# 重定向和重写规则
[[redirects]]
  from = "/api/proxy"
  to = "/.netlify/functions/proxy"
  status = 200

[[redirects]]
  from = "/test-proxy"
  to = "/src/pages/test-proxy.html"
  status = 200

[[redirects]]
  from = "/imgs/icons/*"
  to = "/assets/icons/:splat"
  status = 200

# 安全头部配置
[[headers]]
  for = "/*"
  [headers.values]
    X-Content-Type-Options = "nosniff"
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=()"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains"

[[headers]]
  for = "/"
  [headers.values]
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self' *.netlify.app"

[[headers]]
  for = "/src/js/*.js"
  [headers.values]
    Content-Type = "application/javascript; charset=utf-8"
    Cache-Control = "public, max-age=3600"

[[headers]]
  for = "/src/css/*.css"
  [headers.values]
    Content-Type = "text/css; charset=utf-8"
    Cache-Control = "public, max-age=3600"

[[headers]]
  for = "*.html"
  [headers.values]
    Cache-Control = "public, max-age=300"

# 函数配置
[functions]
  directory = "netlify/functions"
  node_bundler = "esbuild"

[functions."proxy"]
  timeout = 30

# 开发环境配置
[dev]
  command = "npm run dev"
  port = 8888
  publish = "."
  functions = "netlify/functions"

# 部署配置
[context.production]
  command = "npm run build:prod"
  
[context.deploy-preview]
  command = "npm run build:preview"

[context.branch-deploy]
  command = "npm run build"

# 插件配置
[[plugins]]
  package = "@netlify/plugin-sitemap"

# 表单处理（如果需要）
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

# 边缘函数配置（如果需要）
[[edge_functions]]
  function = "proxy-edge"
  path = "/api/proxy-edge"
